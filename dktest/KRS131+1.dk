#NAME KRS131_431todk.
cnotA : logic.Term -> logic.Prop.
cNothing : logic.Term -> logic.Prop.
cowlNothing : logic.Term -> logic.Prop.
cA : logic.Term -> logic.Prop.
cowlThing : logic.Term -> logic.Prop.
rq : logic.Term -> logic.Term -> logic.Prop.
xsd_integer : logic.Term -> logic.Prop.
rp : logic.Term -> logic.Term -> logic.Prop.
xsd_string : logic.Term -> logic.Prop.
conjecture_proof : logic.prf (logic.imply (logic.forall (X:logic.Term => (logic.and (cowlThing X) (logic.not (cowlNothing X))))) (logic.imply (logic.forall (X:logic.Term => (logic.equiv (xsd_string X) (logic.not (xsd_integer X))))) (logic.imply (logic.forall (X:logic.Term => (logic.and (logic.imply (logic.not (logic.not (cA X))) (logic.exists (Y:logic.Term => (logic.and (rq X Y) (cowlThing Y))))) (logic.imply (logic.exists (Y:logic.Term => (logic.and (rq X Y) (cowlThing Y)))) (cA X))))) (logic.imply (logic.forall (X:logic.Term => (logic.imply (cNothing X) (logic.not (logic.exists (Y:logic.Term => (rp X Y))))))) (logic.imply (logic.forall (X:logic.Term => (logic.imply (cNothing X) (logic.exists (Y:logic.Term => (rp X Y)))))) (logic.imply (logic.forall (X:logic.Term => (logic.and (logic.imply (logic.not (logic.not (cnotA X))) (logic.forall (Y:logic.Term => (logic.imply (rq X Y) (cNothing Y))))) (logic.imply (logic.forall (Y:logic.Term => (logic.imply (rq X Y) (cNothing Y)))) (cnotA X))))) (logic.and (logic.forall (X:logic.Term => (logic.and (cowlThing X) (logic.not (cowlNothing X))))) (logic.and (logic.forall (X:logic.Term => (logic.equiv (xsd_string X) (logic.not (xsd_integer X))))) (logic.forall (X:logic.Term => (logic.and (logic.imply (cnotA X) (logic.not (cA X))) (logic.imply (logic.not (cA X)) (logic.not (logic.not (cnotA X))))))))))))))) :=
(H0 : logic.prf (logic.forall (X:logic.Term => (logic.and (cowlThing X) (logic.not (cowlNothing X))))) => (H1 : logic.prf (logic.forall (X:logic.Term => (logic.equiv (xsd_string X) (logic.not (xsd_integer X))))) => (H2 : logic.prf (logic.forall (X:logic.Term => (logic.and (logic.imply (logic.not (logic.not (cA X))) (logic.exists (Y:logic.Term => (logic.and (rq X Y) (cowlThing Y))))) (logic.imply (logic.exists (Y:logic.Term => (logic.and (rq X Y) (cowlThing Y)))) (cA X))))) => (H3 : logic.prf (logic.forall (X:logic.Term => (logic.imply (cNothing X) (logic.not (logic.exists (Y:logic.Term => (rp X Y))))))) => (H4 : logic.prf (logic.forall (X:logic.Term => (logic.imply (cNothing X) (logic.exists (Y:logic.Term => (rp X Y)))))) => (H5 : logic.prf (logic.forall (X:logic.Term => (logic.and (logic.imply (logic.not (logic.not (cnotA X))) (logic.forall (Y:logic.Term => (logic.imply (rq X Y) (cNothing Y))))) (logic.imply (logic.forall (Y:logic.Term => (logic.imply (rq X Y) (cNothing Y)))) (cnotA X))))) => (P6 : logic.Prop => H7 : (logic.prf (logic.forall (X:logic.Term => (logic.and (cowlThing X) (logic.not (cowlNothing X))))) -> logic.prf (logic.and (logic.forall (X:logic.Term => (logic.equiv (xsd_string X) (logic.not (xsd_integer X))))) (logic.forall (X:logic.Term => (logic.and (logic.imply (cnotA X) (logic.not (cA X))) (logic.imply (logic.not (cA X)) (logic.not (logic.not (cnotA X)))))))) -> logic.prf P6) => H7 H0 (P8 : logic.Prop => H9 : (logic.prf (logic.forall (X:logic.Term => (logic.equiv (xsd_string X) (logic.not (xsd_integer X))))) -> logic.prf (logic.forall (X:logic.Term => (logic.and (logic.imply (cnotA X) (logic.not (cA X))) (logic.imply (logic.not (cA X)) (logic.not (logic.not (cnotA X))))))) -> logic.prf P8) => H9 H1 (v0:logic.Term => (P10 : logic.Prop => H11 : (logic.prf (logic.imply (cnotA v0) (logic.not (cA v0))) -> logic.prf (logic.imply (logic.not (cA v0)) (logic.not (logic.not (cnotA v0)))) -> logic.prf P10) => H11 (H12 : logic.prf (cnotA v0) => (H13 : logic.prf (cA v0) => ((H5 v0) logic.False (H14 : logic.prf (logic.imply (logic.not (logic.not (cnotA v0))) (logic.forall (Y:logic.Term => (logic.imply (rq v0 Y) (cNothing Y))))) => H15 : logic.prf (logic.imply (logic.forall (Y:logic.Term => (logic.imply (rq v0 Y) (cNothing Y)))) (cnotA v0)) => ((H2 v0) logic.False (H16 : logic.prf (logic.imply (logic.not (logic.not (cA v0))) (logic.exists (Y:logic.Term => (logic.and (rq v0 Y) (cowlThing Y))))) => H17 : logic.prf (logic.imply (logic.exists (Y:logic.Term => (logic.and (rq v0 Y) (cowlThing Y)))) (cA v0)) => ((H16 (H19 : logic.prf (logic.not (cA v0)) => (H19 (H17 ((H19 H13) (logic.exists (Y:logic.Term => (logic.and (rq v0 Y) (cowlThing Y))))))))) logic.False (v2:logic.Term => H18:logic.prf (logic.and (rq v0 v2) (cowlThing v2)) => (H18 logic.False (H20 : logic.prf (rq v0 v2) => H21 : logic.prf (cowlThing v2) => (((H3 v2) (((H14 (H22 : logic.prf (logic.not (cnotA v0)) => (H22 (H15 ((H22 H12) (logic.forall (Y:logic.Term => (logic.imply (rq v0 Y) (cNothing Y))))))))) v2) H20)) ((H4 v2) (((H14 (H23 : logic.prf (logic.not (cnotA v0)) => (H23 (H15 ((H23 H12) (logic.forall (Y:logic.Term => (logic.imply (rq v0 Y) (cNothing Y))))))))) v2) H20))))))))))))) (H24 : logic.prf (logic.not (cA v0)) => ((H5 v0) (logic.not (logic.not (cnotA v0))) (H25 : logic.prf (logic.imply (logic.not (logic.not (cnotA v0))) (logic.forall (Y:logic.Term => (logic.imply (rq v0 Y) (cNothing Y))))) => H26 : logic.prf (logic.imply (logic.forall (Y:logic.Term => (logic.imply (rq v0 Y) (cNothing Y)))) (cnotA v0)) => (H27 : logic.prf (logic.not (cnotA v0)) => (H27 (H26 (H25 (H28 : logic.prf (logic.not (cnotA v0)) => (H28 ((H28 (H26 (v1:logic.Term => (H29 : logic.prf (rq v0 v1) => (((H2 v0) logic.False (H30 : logic.prf (logic.imply (logic.not (logic.not (cA v0))) (logic.exists (Y:logic.Term => (logic.and (rq v0 Y) (cowlThing Y))))) => H31 : logic.prf (logic.imply (logic.exists (Y:logic.Term => (logic.and (rq v0 Y) (cowlThing Y)))) (cA v0)) => (H24 (H31 (H30 (H32 : logic.prf (logic.not (cA v0)) => (H32 ((H32 (H31 ((H0 v1) (logic.exists (Y:logic.Term => (logic.and (rq v0 Y) (cowlThing Y)))) (H33 : logic.prf (cowlThing v1) => H34 : logic.prf (logic.not (cowlNothing v1)) => (P35:logic.Prop => H36: (Y:logic.Term -> logic.prf (logic.and (rq v0 Y) (cowlThing Y)) -> logic.prf P35) => H36 v1 (P37 : logic.Prop => H38 : (logic.prf (rq v0 v1) -> logic.prf (cowlThing v1) -> logic.prf P37) => H38 H29 H33)))))) (cA v0))))))))) (cNothing v1)))))) (cnotA v0))))))))))))))))))))).