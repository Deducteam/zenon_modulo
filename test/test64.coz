(*  Copyright 2006 INRIA  *)
(*  $Id: test64.coz,v 1.7 2006-07-20 13:19:21 doligez Exp $  *)

(*
; file: species_general_additive_law.foc
; species: partially_ordered_additive_monoid
; property: sup_commutes / __lemma_1_2_1
*)

Parameter abst_T : Type.
Parameter abst_equal : abst_T -> abst_T -> bool.
Parameter abst_inf : abst_T -> abst_T -> abst_T.
Parameter abst_sup : abst_T -> abst_T -> abst_T.
Parameter abst_plus : abst_T -> abst_T -> abst_T.
Parameter x : abst_T.
Parameter y : abst_T.

Parameter
  abst_equal_transitive: forall (x: abst_T) (y: abst_T) (z: abst_T),
  ((Is_true ((abst_equal  x y)) ))-> 
    ((Is_true ((abst_equal  y z)) ))-> 
      (Is_true ((abst_equal  x z)) ).
Parameter
  abst_plus_commutes: forall (x: abst_T) (y: abst_T), (Is_true
  ((abst_equal  (abst_plus  x y) (abst_plus  y x))) ).
Parameter
  abst_sum_is_inf_plus_sup: forall (x: abst_T) (y: abst_T), (Is_true
  ((abst_equal  (abst_plus  x y) (abst_plus  (abst_inf  x y) (abst_sup  x
   y))))
  ).

Theorem thm :
(Is_true
((abst_equal (abst_plus x y ) (abst_plus (abst_inf y x ) (abst_sup y x ) ) ))
)
.
