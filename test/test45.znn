;  Copyright 2006 INRIA
;  $Id: test45.znn,v 1.5 2006-07-20 13:19:21 doligez Exp $

; file: species_general_additive_law.foc
; species: partially_ordered_additive_monoid
; property: add_absorbes_sup

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Zenon cannot solve this problem yet
;; hence the following line
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
$hyp False

$sig abst_equal ("zenon'U" "zenon'U") "bool"

$def (abst_order_inf x y) (abst_equal x (abst_inf x y))
$def (abst_order_sup x y) (abst_equal x (abst_sup x y))

; abst_plus_is_left_congruence
$hyp
(A. ((x) (A. ((y) (A. ((z)
  (=> (Is_true (abst_equal x y))
      (Is_true (abst_equal (abst_plus x z) (abst_plus y z))))))))))

; abst_equal_transitive
$hyp
(A. ((x) (A. ((y) (A. ((z)
  (=> (Is_true (abst_equal x y))
      (=> (Is_true (abst_equal y z))
          (Is_true (abst_equal x z))))))))))

; abst_plus_is_regular
$hyp
(A. ((x) (A. ((y) (A. ((z)
  (=> (Is_true (abst_equal (abst_plus x y) (abst_plus x z)))
      (Is_true (abst_equal y z)))))))))

; abst_plus_commutes
$hyp
(A. ((x) (A. ((y)
  (Is_true (abst_equal (abst_plus x y) (abst_plus y x)))))))

; abst_add_keeps_inf
$hyp
(A. ((x) (A. ((y) (Is_true (abst_order_inf x (abst_plus x y)))))))

; abst_inf_commutes
$hyp
(A. ((x) (A. ((y)
     (Is_true (abst_equal (abst_inf x y) (abst_inf y x)))))))

; abst_sum_is_inf_plus_sup
$hyp
(A. ((x) (A. ((y)
  (Is_true (abst_equal (abst_plus x y)
                       (abst_plus (abst_inf x y) (abst_sup x y))))))))

$goal
(A. ((x) (A. ((y)
  (Is_true (abst_order_sup (abst_plus x y) x))))))
