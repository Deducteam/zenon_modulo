(*  Copyright 2006 INRIA  *)
(*  $Id: test49.coz,v 1.6 2006-03-01 14:39:03 doligez Exp $  *)

(*
; file: species_general_additive_law.foc
; species: partially_ordered_additive_monoid
; property: add_absorbes_sup / __goal_11
*)
%%begin-auto-proof

(Is_true ((abst_order_sup (abst_plus x y ) x ))
)

Parameter abst_T : Type.
Parameter x : abst_T.
Parameter y : abst_T.
Parameter abst_equal : abst_T -> abst_T -> bool.
Parameter abst_plus : abst_T -> abst_T -> abst_T.
Parameter abst_sup : abst_T -> abst_T -> abst_T.

Parameter
  abst_plus_is_regular: forall (x: abst_T) (y: abst_T) (z: abst_T),
  ((Is_true ((abst_equal  (abst_plus  x y) (abst_plus  x z))) ))-> 
    (Is_true ((abst_equal  y z)) )
.
Parameter __lemma_1_1: (Is_true
  ((abst_equal
    (abst_plus x (abst_plus x y ) )
    (abst_plus x (abst_sup (abst_plus x y ) x ) )
   ))
  )
.
Definition
  abst_order_sup :=
  (fun (x: abst_T) => (fun (y: abst_T) => (abst_equal  x (abst_sup  x y))))
.
%%end-auto-proof
