; file: species_general_additive_law.foc
; species: partially_ordered_additive_monoid
; property: order_inf_reverse_order_sup / __goal_15

%%begin-auto-proof
%%location: []
%%name: foo
%%statement
(Is_true ((abst_order_sup y x ))
)
By
  abst_equal_transitive: (x: abst_T) (y: abst_T) (z: abst_T)
  ((Is_true ((abst_equal  x y)) ))-> 
    ((Is_true ((abst_equal  y z)) ))-> 
      (Is_true ((abst_equal  x z)) )
  abst_sup_commutes: (x: abst_T) (y: abst_T) (Is_true
  ((abst_equal  (abst_sup  x y) (abst_sup  y x))) ) abst_plus_is_regular:
  (x: abst_T) (y: abst_T) (z: abst_T)
  ((Is_true ((abst_equal  (abst_plus  x y) (abst_plus  x z))) ))-> 
    (Is_true ((abst_equal  y z)) ) __lemma_1_1: (Is_true
  ((abst_equal
    (abst_plus (abst_inf x y ) y ) (abst_plus (abst_inf x y ) (abst_sup x y )
    )
   ))
  )
By def abst_order_sup:= [x: abst_T][y: abst_T](abst_equal  x (abst_sup  x y))
%%end-auto-proof
