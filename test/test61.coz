; file: species_general_additive_law.foc
; species: partially_ordered_additive_monoid
; property: sup_commutes / __lemma_1_1_1

%%begin-auto-proof
%%location: []
%%name: foo
%%statement
(Is_true
((abst_equal
  (abst_plus (abst_inf x y ) (abst_sup x y ) )
  (abst_plus (abst_inf y x ) (abst_sup x y ) )
 ))
)
By
  abst_plus_is_left_congruence: (x: abst_T) (y: abst_T) (z: abst_T)
  ((Is_true ((abst_equal  x y)) ))-> 
    (Is_true ((abst_equal  (abst_plus  x z) (abst_plus  y z))) )
  abst_inf_commutes: (x: abst_T) (y: abst_T) (Is_true
  ((abst_equal  (abst_inf  x y) (abst_inf  y x))) )
By def 
%%end-auto-proof
