; file: species_general_additive_law.foc
; species: partially_ordered_additive_monoid
; property: sup_commutes / __goal_11

    (* to be proved *)
(Is_true
((abst_equal (abst_plus (abst_inf y x ) (abst_sup y x ) ) (abst_plus x y ) ))
)
By
  abst_equal_symmetric: (x: abst_T) (y: abst_T)
  ((Is_true ((abst_equal  x y)) ))-> 
    (Is_true ((abst_equal  y x)) ) __lemma_1_2_1: (Is_true
  ((abst_equal (abst_plus x y ) (abst_plus (abst_inf y x ) (abst_sup y x ) )
   ))
  )
By def 
(* Qed *).
