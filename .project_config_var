#**********************************************************************#
#                                                                      #
#                        FoCaLiZe compiler                             #
#                                                                      #
#            François Pessaux                                          #
#            Pierre Weis                                               #
#            Damien Doligez                                            #
#                                                                      #
#                               LIP6  --  INRIA Rocquencourt           #
#                                                                      #
#  Copyright 2008 INRIA                                                #
#  Distributed only by permission.                                     #
#                                                                      #
#**********************************************************************#

# $Id: .project_config_var,v 1.7 2010-01-07 00:05:04 weis Exp $

# The seed source file for the project.
# It contains the names of basic entities necessary to define, configure,
# build, and distribute the entire project. Normally all the variables
# defined here are never redefined.

# The configuration variables specific to FoCaLiZe.

set_project_id () {

  # Fix the name and version of the software
  PROJECT_NAME=zenon

  PROJECT_NAME_TEXT=Zenon

  PROJECT_WEB_SERVER=modulogic.inria.fr
  PROJECT_WEB_SITE_DIR=/home/www/zenon

  PROJECT_FIRST_YEAR=1997

  VERSION_NUMBER_MAIN=0
  VERSION_NUMBER_SUB=6
  VERSION_NUMBER_PATCH=2

  VERSION_NUMBER_FULL="${VERSION_NUMBER_MAIN}.${VERSION_NUMBER_SUB}.${VERSION_NUMBER_PATCH}"

  PROJECT_NAME_FULL="${PROJECT_NAME}-${VERSION_NUMBER_FULL}"

  # The list of external tools for the project.
  # (Also defined in ./Makefile.config if any.)
  # Do we use statically known external tools ?
  # If false, we just call external tools as found in the runtime PATH.
  DEFAULT_STATIC_EXTERNAL=true
  CAML_NAME="ocaml"
  CAMLP5_NAME="camlp5"
  COQ_NAME="coq"
  TOOLS_EXTERNAL=""

  # The list of internal tools for the project. Those are likely to be
  # stand alone projects inside the main project: its sub-projects.
  # (Also defined in ./Makefile.config if any.)
  TOOLS_INTERNAL=""

  # The list of tools specifically provided by the project
  # (not one of the stand alone internal projects).
  DEFAULT_STATIC_DELIVERABLES=true
  ZENON_NAME="zenon"
  ZVTOV_NAME="zvtov"
  ZENON_NAME_FULL="${PROJECT_NAME_FULL}"

  DELIVERABLES="${ZENON_NAME}"

  # The manual extension for the man page of the project
  PROJECT_MAN_EXT=1

}

#
# Defining all default variables
#

# Defining intrinsic defaults (default values for default values!).
set_intrinsic_defaults () {

  # Intrinsic defaults for the project.

  # Do we use debug mode ?
  DEFAULT_DEBUG=true

  # Intrinsic defaults for the project installation.
  DEFAULT_PREFIX="/usr/local"

  # External tools
  # Do we make external tools ?
  DEFAULT_MAKE_EXTERNAL=false
  # Do we perform a fake make for external tools ?
  DEFAULT_MAGIC_MAKE_EXTERNAL=false

  # Do we use statically known external tools ?
  DEFAULT_STATIC_EXTERNAL=false

  # Do we use an external tools specific prefix directory for the project ?
  # If true, external tools will be installed in TOOLS_PREFIX as defined
  # after the configuration phase.
  DEFAULT_USE_TOOLS_PREFIX_DIRECTORY=false
  # The default tools specific prefix directory.
  # Was once DEFAULT_TOOLS_PREFIX="$DEFAULT_PREFIX"
  # Unfortunately, there is no way to avoid tools installation during
  # building phase: to compile Camlp5 the caml compiler must be installed
  # somewhere and the like to compile Coq, Camlp5 must be installed;
  # afterwards coq must be installed before compiling focalizec.
  # We could install all those in some fake place during the building phase,
  # and then install them in the proper relevant location; unfortunately this
  # would mean to recompile the all set of external and internal tools twice
  # which is really costy. Let stay on the safe side and install tools in
  # some safe place in the home directory of the user.
  DEFAULT_TOOLS_PREFIX="$HOME/pkg"
  
  # Do we use a 'full project name' private sub directory inside the
  # ${TOOLS_PREFIX} directory for the installation of the external/internal
  # tools of the project ?
  DEFAULT_USE_PROJECT_SUB_DIRECTORY=false

  # Intrinsic default flags for Caml compilation.
  DEFAULT_BYT_DEBUG_FLAGS="-g -dtypes"
  DEFAULT_BIN_DEBUG_FLAGS="-dtypes"

  # Intrinsic defaults for Coq.
  DEFAULT_COQ_RC="$HOME/.coqrc"
  DEFAULT_COQ_MAKE="gmake"

  # Intrinsic defaults for Zenon.
  DEFAULT_USE_COQ_COMPILER=true
  DEFAULT_SUM=:
  DEFAULT_CONVERT=:
  DEFAULT_GS=:

  # Intrinsic defaults for Zvtov.
  DEFAULT_USE_XMLRPC=false
  DEFAULT_XMLRPC=:
  DEFAULT_XMLRPC_MODULE="xmlrpc"
  DEFAULT_XMLRPC_FLAGS=""
  DEFAULT_XMLRPC_LINK=""

}
