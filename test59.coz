; file: species_general_additive_law.foc
; species: partially_ordered_additive_monoid
; property: order_inf_reverse_order_sup / __goal_19

    (* to be proved *)
(Is_true ((abst_order_inf yy xx ))
)
By
  abst_equal_transitive: (x: abst_T) (y: abst_T) (z: abst_T)
  ((Is_true ((abst_equal  x y)) ))-> 
    ((Is_true ((abst_equal  y z)) ))-> 
      (Is_true ((abst_equal  x z)) )
  abst_inf_commutes: (x: abst_T) (y: abst_T) (Is_true
  ((abst_equal  (abst_inf  x y) (abst_inf  y x))) ) abst_plus_is_regular:
  (x: abst_T) (y: abst_T) (z: abst_T)
  ((Is_true ((abst_equal  (abst_plus  x y) (abst_plus  x z))) ))-> 
    (Is_true ((abst_equal  y z)) ) __lemma_2_2: (Is_true
  ((abst_equal
    (abst_plus (abst_inf xx yy ) (abst_sup xx yy ) )
    (abst_plus (abst_sup xx yy ) (abst_inf xx yy ) )
   ))
  ) __lemma_2_1: (Is_true
  ((abst_equal
    (abst_plus (abst_sup xx yy ) yy )
    (abst_plus (abst_inf xx yy ) (abst_sup xx yy ) )
   ))
  )
By def abst_order_inf:= [x: abst_T][y: abst_T](abst_equal  x (abst_inf  x y))
(* Qed *).
