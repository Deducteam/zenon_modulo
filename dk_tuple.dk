#NAME dk_tuple.

prod : cc.uT -> cc.uT -> cc.uT.
Prod : cc.uT -> cc.uT -> Type.
[A, B] cc.eT (prod A B) --> Prod A B.

pair : A : cc.uT ->
       B : cc.uT ->
       cc.eT A ->
       cc.eT B ->
       Prod A B.

def fst : A : cc.uT -> B : cc.uT -> Prod A B -> cc.eT A.
def snd : A : cc.uT -> B : cc.uT -> Prod A B -> cc.eT B.

[a]
    fst _ _ (pair _ _ a _) --> a.
[b]
    snd _ _ (pair _ _ _ b) --> b.

def match__pair : A : cc.uT ->
                  B : cc.uT ->
                  C : cc.uT ->
                  Prod A B ->
                  (cc.eT A -> cc.eT B -> cc.eT C) ->
                  cc.eT C ->
                  cc.eT C.

[f, a, b]
    match__pair _ _ _ (pair _ _ a b) f _ --> f a b.

