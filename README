2015.05.25
README file for Zenon Modulo 0.4.0

----------------------------------------

For license information, see LICENSE

----------------------------------------

Contact: Pierre Halmagrand <pierre.halmagrand@inria.fr>
	 Guillaume Bury <guillaume.bury@inria.fr>
         Raphael Cauderlier <raphael.cauderlier@inria.fr>

----------------------------------------

Prerequisites:
  - OCaml 4.02.1 (with ocamlopt)
  - Coq 8.0.x
  - Dedukti 2.3
  - zarith 1.3
  - ImageMagick (optional)
  - Ghostscript (optional)

----------------------------------------

Compile and install with:
  configure
  make
  make install

----------------------------------------

Remarks:

- Zenon Modulo is an automated theorem prover for classical
  first order logic with polymorphic types

- Zenon Modulo can be download at:
  https://www.rocq.inria.fr/deducteam/ZenonModulo/index.html
  https://gforge.inria.fr/projects/zenon/

- Zenon Modulo is part of the BWare project
  http://bware.lri.fr/

- Zenon Modulo is used in FoCaLiZe project
  http://focalize.inria.fr/

- Proceedings about Zenon Modulo may be found here
  http://hal.inria.fr/hal-00909784
  http://hal.inria.fr/hal-00909688

- Zenon Modulo accepts input files with the TPTP syntax (FOF and TFF1)
  http://www.cs.miami.edu/~tptp/
  And also with Dedukti syntax
  http://dedukti.gforge.inria.fr/

- Zenon Modulo may produce proof certificats for Dedukti
  http://dedukti.gforge.inria.fr/
  https://gforge.inria.fr/projects/dedukti/

- To use Zenon Modulo with TFF1 files of the BWare Proof Obligations
  (with B set theory express in B_modulo.why):
  >> activate the '-b-rwrt' flag to build the rewrite system
  >> activate the '-rwrt' flag to transform more axioms into rewrite rules
  >> activate the '-x arith' flag to use the arithmetic extension
  >> activate the '-odk' to generate a proof certificate for dedukti
  >> activate the '-om' to print a proof
  >> activate the '-dbg-rwrt' to print the rewrite system and rewriting steps

- To use Zenon Modulo with Dedukti files for FoCaLiZe project

----------------------------------------

Examples:

First, compile Dedukti file modulogic.dk:

# dkcheck -e cc.dk dk_bool.dk dk_logic.dk modulogic.dk

1/ BWare with TFF1 files

Some TFF1 input files are given as examples into ./examples repository
Four of them are set properties coming from the B-Book, and the last one
is a Proof Obligation coming from the BWare benchmark.

To run and test Zenon Modulo:

 - Minimal call
 # zenon_modulo -itptp -b-rwrt ./tff1_examples/file_name.p

 - Print proof and rewriting steps
 # zenon_modulo -itptp -b-rwrt -dbg-rwrt -om ./tff1_examples/file_name.p

 - Generate proof certificate for dedukti
 # zenon_modulo -itptp -b-rwrt -odk ./tff1_examples/file_name.p > certificate.dk

 - To verify the proof with dedukti
   # dkcheck certificate.dk

2/ FoCaLiZe with Dedukti files

----------------------------------------
